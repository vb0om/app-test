# Default values for test_app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "stable"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  container_port: 8080

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: demo-app-2.maddevs.org
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: nginx-html
    configMap:
      name: nginx-html-page
  - name: nginx-conf
    configMap:
      name: nginx-conf

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: nginx-html
    mountPath: /usr/share/nginx/html
    readOnly: true
  - name: nginx-conf
    mountPath: /etc/nginx/nginx.conf
    subPath: nginx.conf

nodeSelector: {}

tolerations: []

affinity: {}

networkpolicy:
  ingress: 
    - from:
      # From monitoring namespace (all pods)
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: monitoring
      # From ingress-nginx pods in namespace ingress-nginx
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: ingress-nginx
        podSelector:
          matchLabels:
            app.kubernetes.io/instance: ingress-nginx
  egress:
    # Egress to app-1 in the namespace app-1
    - to:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: app-1
        podSelector:
          matchLabels:
            app.kubernetes.io/instance: app-1
    # Egress to kube-system namespace for DNS resolution
    - to:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: kube-system
        podSelector:
          matchLabels:
            k8s-app: kube-dns
      ports:
      - protocol: TCP
        port: 53
      - protocol: UDP
        port: 53

pageContent: |
  "<h1>Welcome to Application 2</h1>"
